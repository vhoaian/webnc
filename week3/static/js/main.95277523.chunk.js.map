{"version":3,"sources":["Square.jsx","Board.jsx","Game.jsx","index.js"],"names":["Square","props","className","onClick","style","highlight","background","color","value","Board","i","this","squares","key","rows","j","push","renderSquare","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","movesAreAscending","slice","setState","concat","step","status","current","winner","moves","map","move","prevSquares","nextSquares","diffIndex","console","log","index","Math","floor","findLocation","x","y","desc","jumpTo","reverse","_squares","forEach","getWinnersSquares","isDrawnGame","handleClick","toggleMovesOrder","reversed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95277523.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick} style={props.highlight ? {background: \"yellow\", color: \"red\"} : null}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board extends Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        highlight={this.props.highlight[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        key={i}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const rows = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      const squares = [];\r\n      for (let j = 0; j < 3; j++) {\r\n        squares.push(this.renderSquare(i*3 + j))\r\n      }\r\n      rows.push(<div className=\"board-row\" key={i}>{squares}</div>);\r\n    }\r\n    return (\r\n      <div>{rows}</div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getWinnersSquares(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  const _squares = Array(9).fill(false);\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      lines[i].forEach(index => _squares[index] = true);\r\n    }\r\n  }\r\n  return _squares;\r\n}\r\n\r\nfunction findLocation(prevSquares, nextSquares) {\r\n  let diffIndex;\r\n  console.log(prevSquares, nextSquares)\r\n  for (let index = 0; index < 9; index++) {\r\n    if (prevSquares.squares[index] !== nextSquares.squares[index])\r\n      diffIndex = index;\r\n  }\r\n  return [Math.floor(diffIndex / 3), diffIndex % 3];\r\n}\r\n\r\nfunction isDrawnGame(squares) {\r\n  for (let i = 0; i < squares.length; i++) {\r\n    if (squares[i] === null) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      movesAreAscending: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  toggleMovesOrder() {\r\n    this.setState(\r\n      {\r\n        movesAreAscending: !this.state.movesAreAscending\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const movesAreAscending = this.state.movesAreAscending;\r\n\r\n    const moves = history.map((step, move) => {\r\n      const [x, y] = move !== 0 ? findLocation(history[move-1], history[move]) : [null, null];\r\n      const desc = move ?\r\n        'Go to move #' + move + ` (${x}, ${y})` :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{move === this.state.stepNumber ? <b>{desc}</b>: desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    if (!this.state.movesAreAscending)\r\n      moves.reverse();\r\n\r\n    let status;\r\n    let highlight = Array(9).fill(false);\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n      highlight = getWinnersSquares(current.squares);\r\n    } else {\r\n      if (isDrawnGame(current.squares))\r\n        status = 'Draw';\r\n      else\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            highlight={highlight}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>\r\n            {status}\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.toggleMovesOrder()}>\r\n              Toggle moves' order\r\n            </button>\r\n          </div>\r\n          {movesAreAscending ? <ol>{moves}</ol> : <ol reversed>{moves}</ol>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Game from \"./Game\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}