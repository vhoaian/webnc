{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","App","classes","useState","boards","setBoards","useEffect","axios","then","result","data","Fragment","CssBaseline","AppBar","position","Toolbar","Typography","variant","color","noWrap","Container","className","maxWidth","Grid","container","length","map","board","item","key","id","xs","sm","md","Card","CardMedia","image","title","CardContent","gutterBottom","component","name","Date","created_at","toLocaleString","CardActions","Button","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAeMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BC,YAAa,CACXC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,QAAST,EAAMG,QAAQ,EAAG,EAAG,IAE/BO,YAAa,CACXC,UAAWX,EAAMG,QAAQ,IAE3BS,SAAU,CACRC,WAAYb,EAAMG,QAAQ,GAC1BW,cAAed,EAAMG,QAAQ,IAE/BY,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTN,WAAY,UAEdO,YAAa,CACXC,SAAU,GAEZC,OAAQ,CACNjB,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,QAAST,EAAMG,QAAQ,QAKZ,SAASoB,IACtB,IAAMC,EAAU1B,IADY,EAEA2B,mBAAS,IAFT,mBAErBC,EAFqB,KAEbC,EAFa,KAS5B,OALAC,qBAAU,WACRC,IAAM,yCACHC,MAAK,SAAAC,GAAM,OAAIJ,EAAUI,EAAOC,WAClC,CAACN,IAGF,kBAAC,IAAMO,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUC,QAAM,GAA/C,iBAKJ,8BACE,kBAACC,EAAA,EAAD,CAAWC,UAAWnB,EAAQZ,SAAUgC,SAAS,MAC/C,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,GACJ,IAAlBuB,EAAOqB,OAAe,KAAOrB,EAAOsB,KAAI,SAACC,GAAD,OACvC,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAKF,EAAMG,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3C,kBAACC,EAAA,EAAD,CAAMb,UAAWnB,EAAQT,MACvB,kBAAC0C,EAAA,EAAD,CACEd,UAAWnB,EAAQL,UACnBuC,MAAM,qCACNC,MAAM,gBAER,kBAACC,EAAA,EAAD,CAAajB,UAAWnB,EAAQJ,aAC9B,kBAACkB,EAAA,EAAD,CAAYuB,cAAY,EAACtB,QAAQ,KAAKuB,UAAU,MAC7Cb,EAAMc,MAET,kBAACzB,EAAA,EAAD,KACG,IAAI0B,KAAKf,EAAMgB,YAAYC,mBAGhC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQ7B,MAAM,WAA3B,kBCnFpB8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjD,EAAD,OAEFkD,SAASC,eAAe,W","file":"static/js/main.c0986702.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [boards, setBoards] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    axios('https://webnc-gk.herokuapp.com/boards')\r\n      .then(result => setBoards(result.data));\r\n  }, [boards]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Boards list\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          <Grid container spacing={4}>\r\n            {boards.length === 0 ? null : boards.map((board) => (\r\n              <Grid item key={board.id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {board.name}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {new Date(board.created_at).toLocaleString()}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      View\r\n                    </Button>\r\n                    {/* <Button size=\"small\" color=\"primary\">\r\n                      Edit\r\n                    </Button> */}\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}